{"ast":null,"code":"var _jsxFileName = \"/Users/suhyeong/Desktop/SuhyeongCho/Github/hello-next/pages/p/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport Layout from '../../components/MyLayout'; // import fetch from 'isomorphic-unfetch';\n// const Post = props => (\n//     <Layout>\n//         <h1>{props.show.name}</h1>\n//         <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//         <img src={props.show.image.medium}/>\n//     </Layout>\n// );\n// Post.getInitialProps = async function(context) {\n//     const {id} = context.query;\n//     const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//     const show = await res.json();\n//     console.log(`Fetched show: ${show.name}`);\n//     return {show};\n// }\n// export default Post;\n\nexport default (() => {\n  const router = useRouter();\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-2023707337\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, router.query.id), __jsx(\"div\", {\n    className: \"jsx-2023707337\" + \" \" + \"markdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Markdown, {\n    source: `\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as swll.\n\n### This is a title\n\nAnd here's the content.\n                    `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"2023707337\",\n    __self: this\n  }, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWh5ZW9uZy9EZXNrdG9wL1N1aHllb25nQ2hvL0dpdGh1Yi9oZWxsby1uZXh0L3BhZ2VzL3AvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQytCLEFBR3lDLEFBSUMsQUFLVCxZQUNoQixRQVRBLDhCQUllLFdBQ2YiLCJmaWxlIjoiL1VzZXJzL3N1aHllb25nL0Rlc2t0b3AvU3VoeWVvbmdDaG8vR2l0aHViL2hlbGxvLW5leHQvcGFnZXMvcC9baWRdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCBNYXJrZG93biBmcm9tICdyZWFjdC1tYXJrZG93bidcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NeUxheW91dCc7XG4vLyBpbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcblxuLy8gY29uc3QgUG9zdCA9IHByb3BzID0+IChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgICA8aDE+e3Byb3BzLnNob3cubmFtZX08L2gxPlxuLy8gICAgICAgICA8cD57cHJvcHMuc2hvdy5zdW1tYXJ5LnJlcGxhY2UoLzxbL10/W3BiXT4vZywgJycpfTwvcD5cbi8vICAgICAgICAgPGltZyBzcmM9e3Byb3BzLnNob3cuaW1hZ2UubWVkaXVtfS8+XG4vLyAgICAgPC9MYXlvdXQ+XG4vLyApO1xuXG4vLyBQb3N0LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKGNvbnRleHQpIHtcbi8vICAgICBjb25zdCB7aWR9ID0gY29udGV4dC5xdWVyeTtcbi8vICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zaG93cy8ke2lkfWApO1xuLy8gICAgIGNvbnN0IHNob3cgPSBhd2FpdCByZXMuanNvbigpO1xuXG4vLyAgICAgY29uc29sZS5sb2coYEZldGNoZWQgc2hvdzogJHtzaG93Lm5hbWV9YCk7XG5cbi8vICAgICByZXR1cm4ge3Nob3d9O1xuLy8gfVxuXG4vLyBleHBvcnQgZGVmYXVsdCBQb3N0O1xuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gICAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPExheW91dD5cbiAgICAgICAgICAgIDxoMT57cm91dGVyLnF1ZXJ5LmlkfTwvaDE+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hcmtkb3duXCI+XG4gICAgICAgICAgICAgICAgPE1hcmtkb3duXG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZT17YFxuVGhpcyBpcyBvdXIgYmxvZyBwb3N0LlxuWWVzLiBXZSBjYW4gaGF2ZSBhIFtsaW5rXSgvbGluaykuXG5BbmQgd2UgY2FuIGhhdmUgYSB0aXRsZSBhcyBzd2xsLlxuXG4jIyMgVGhpcyBpcyBhIHRpdGxlXG5cbkFuZCBoZXJlJ3MgdGhlIGNvbnRlbnQuXG4gICAgICAgICAgICAgICAgICAgIGB9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgICAgICAgICAubWFya2Rvd24ge1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAubWFya2Rvd24gYSB7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLm1hcmtkb3duIGE6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8L0xheW91dD5cbiAgICApXG59Il19 */\\n/*@ sourceURL=/Users/suhyeong/Desktop/SuhyeongCho/Github/hello-next/pages/p/[id].js */\"));\n});","map":{"version":3,"sources":["/Users/suhyeong/Desktop/SuhyeongCho/Github/hello-next/pages/p/[id].js"],"names":["useRouter","Markdown","Layout","router","query","id"],"mappings":";;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,gBAAe,MAAM;AACjB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADJ,EAEI;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACI,IAAA,MAAM,EAAG;;;;;;;;qBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AAAA;AAAA;AAAA,kqFADJ;AAgCH,CAlCD","sourcesContent":["import {useRouter} from 'next/router';\nimport Markdown from 'react-markdown'\nimport Layout from '../../components/MyLayout';\n// import fetch from 'isomorphic-unfetch';\n\n// const Post = props => (\n//     <Layout>\n//         <h1>{props.show.name}</h1>\n//         <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//         <img src={props.show.image.medium}/>\n//     </Layout>\n// );\n\n// Post.getInitialProps = async function(context) {\n//     const {id} = context.query;\n//     const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//     const show = await res.json();\n\n//     console.log(`Fetched show: ${show.name}`);\n\n//     return {show};\n// }\n\n// export default Post;\n\nexport default () => {\n    const router = useRouter();\n    return (\n        <Layout>\n            <h1>{router.query.id}</h1>\n            <div className=\"markdown\">\n                <Markdown\n                    source={`\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as swll.\n\n### This is a title\n\nAnd here's the content.\n                    `}\n                />\n            </div>\n            <style jsx global>{`\n                .markdown {\n                    font-family: 'Arial';\n                }\n\n                .markdown a {\n                    text-decoration: none;\n                    color: blue;\n                }\n\n                .markdown a:hover {\n                    opacity: 0.6;\n                }\n            `}</style>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}