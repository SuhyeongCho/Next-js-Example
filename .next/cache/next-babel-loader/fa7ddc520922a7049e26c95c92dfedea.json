{"ast":null,"code":"var _jsxFileName = \"/Users/suhyeong/Desktop/SuhyeongCho/Github/hello-next/pages/p/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport Layout from '../../components/MyLayout'; // import fetch from 'isomorphic-unfetch';\n// const Post = props => (\n//     <Layout>\n//         <h1>{props.show.name}</h1>\n//         <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//         <img src={props.show.image.medium}/>\n//     </Layout>\n// );\n// Post.getInitialProps = async function(context) {\n//     const {id} = context.query;\n//     const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//     const show = await res.json();\n//     console.log(`Fetched show: ${show.name}`);\n//     return {show};\n// }\n// export default Post;\n\nexport default (() => {\n  const router = useRouter();\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-2720561263\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, router.query.id), __jsx(\"div\", {\n    className: \"jsx-2720561263\" + \" \" + \"markdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Markdown, {\n    source: `\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as swll.\n\n### This is a title\n\nAnd here's the content.\n                    `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"2720561263\",\n    __self: this\n  }, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWh5ZW9uZy9EZXNrdG9wL1N1aHllb25nQ2hvL0dpdGh1Yi9oZWxsby1uZXh0L3BhZ2VzL3AvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQytCLEFBR3lDLEFBSUMsb0JBSHpCLDhCQUlBIiwiZmlsZSI6Ii9Vc2Vycy9zdWh5ZW9uZy9EZXNrdG9wL1N1aHllb25nQ2hvL0dpdGh1Yi9oZWxsby1uZXh0L3BhZ2VzL3AvW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dXNlUm91dGVyfSBmcm9tICduZXh0L3JvdXRlcic7XG5pbXBvcnQgTWFya2Rvd24gZnJvbSAncmVhY3QtbWFya2Rvd24nXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuLy8gaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbi8vIGNvbnN0IFBvc3QgPSBwcm9wcyA9PiAoXG4vLyAgICAgPExheW91dD5cbi8vICAgICAgICAgPGgxPntwcm9wcy5zaG93Lm5hbWV9PC9oMT5cbi8vICAgICAgICAgPHA+e3Byb3BzLnNob3cuc3VtbWFyeS5yZXBsYWNlKC88Wy9dP1twYl0+L2csICcnKX08L3A+XG4vLyAgICAgICAgIDxpbWcgc3JjPXtwcm9wcy5zaG93LmltYWdlLm1lZGl1bX0vPlxuLy8gICAgIDwvTGF5b3V0PlxuLy8gKTtcblxuLy8gUG9zdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbihjb250ZXh0KSB7XG4vLyAgICAgY29uc3Qge2lkfSA9IGNvbnRleHQucXVlcnk7XG4vLyAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2hvd3MvJHtpZH1gKTtcbi8vICAgICBjb25zdCBzaG93ID0gYXdhaXQgcmVzLmpzb24oKTtcblxuLy8gICAgIGNvbnNvbGUubG9nKGBGZXRjaGVkIHNob3c6ICR7c2hvdy5uYW1lfWApO1xuXG4vLyAgICAgcmV0dXJuIHtzaG93fTtcbi8vIH1cblxuLy8gZXhwb3J0IGRlZmF1bHQgUG9zdDtcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICAgIHJldHVybiAoXG4gICAgICAgIDxMYXlvdXQ+XG4gICAgICAgICAgICA8aDE+e3JvdXRlci5xdWVyeS5pZH08L2gxPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXJrZG93blwiPlxuICAgICAgICAgICAgICAgIDxNYXJrZG93blxuICAgICAgICAgICAgICAgICAgICBzb3VyY2U9e2BcblRoaXMgaXMgb3VyIGJsb2cgcG9zdC5cblllcy4gV2UgY2FuIGhhdmUgYSBbbGlua10oL2xpbmspLlxuQW5kIHdlIGNhbiBoYXZlIGEgdGl0bGUgYXMgc3dsbC5cblxuIyMjIFRoaXMgaXMgYSB0aXRsZVxuXG5BbmQgaGVyZSdzIHRoZSBjb250ZW50LlxuICAgICAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgICAgICAgICAgLm1hcmtkb3duIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLm1hcmtkb3duIGEge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8L0xheW91dD5cbiAgICApXG59Il19 */\\n/*@ sourceURL=/Users/suhyeong/Desktop/SuhyeongCho/Github/hello-next/pages/p/[id].js */\"));\n});","map":{"version":3,"sources":["/Users/suhyeong/Desktop/SuhyeongCho/Github/hello-next/pages/p/[id].js"],"names":["useRouter","Markdown","Layout","router","query","id"],"mappings":";;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,gBAAe,MAAM;AACjB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADJ,EAEI;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACI,IAAA,MAAM,EAAG;;;;;;;;qBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AAAA;AAAA;AAAA,47EADJ;AA2BH,CA7BD","sourcesContent":["import {useRouter} from 'next/router';\nimport Markdown from 'react-markdown'\nimport Layout from '../../components/MyLayout';\n// import fetch from 'isomorphic-unfetch';\n\n// const Post = props => (\n//     <Layout>\n//         <h1>{props.show.name}</h1>\n//         <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//         <img src={props.show.image.medium}/>\n//     </Layout>\n// );\n\n// Post.getInitialProps = async function(context) {\n//     const {id} = context.query;\n//     const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//     const show = await res.json();\n\n//     console.log(`Fetched show: ${show.name}`);\n\n//     return {show};\n// }\n\n// export default Post;\n\nexport default () => {\n    const router = useRouter();\n    return (\n        <Layout>\n            <h1>{router.query.id}</h1>\n            <div className=\"markdown\">\n                <Markdown\n                    source={`\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as swll.\n\n### This is a title\n\nAnd here's the content.\n                    `}\n                />\n            </div>\n            <style jsx global>{`\n                .markdown {\n                    font-family: 'Arial';\n                }\n\n                .markdown a {\n                    text-decoration: none;\n                }\n            `}</style>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}