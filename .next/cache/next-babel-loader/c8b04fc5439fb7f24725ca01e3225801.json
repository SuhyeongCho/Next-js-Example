{"ast":null,"code":"var _jsxFileName = \"/Users/suhyeong/Desktop/SuhyeongCho/Github/hello-next/pages/p/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport Layout from '../../components/MyLayout'; // import fetch from 'isomorphic-unfetch';\n// const Post = props => (\n//     <Layout>\n//         <h1>{props.show.name}</h1>\n//         <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//         <img src={props.show.image.medium}/>\n//     </Layout>\n// );\n// Post.getInitialProps = async function(context) {\n//     const {id} = context.query;\n//     const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//     const show = await res.json();\n//     console.log(`Fetched show: ${show.name}`);\n//     return {show};\n// }\n// export default Post;\n\nexport default (() => {\n  const router = useRouter();\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-2866235744\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, router.query.id), __jsx(\"div\", {\n    className: \"jsx-2866235744\" + \" \" + \"markdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Markdown, {\n    source: `\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as swll.\n\n### This is a title\n\nAnd here's the content.\n                    `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"2866235744\",\n    __self: this\n  }, \".markdown{font-family:'Arial';}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWh5ZW9uZy9EZXNrdG9wL1N1aHllb25nQ2hvL0dpdGh1Yi9oZWxsby1uZXh0L3BhZ2VzL3AvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQytCLEFBR3lDLG9CQUN4QiIsImZpbGUiOiIvVXNlcnMvc3VoeWVvbmcvRGVza3RvcC9TdWh5ZW9uZ0Noby9HaXRodWIvaGVsbG8tbmV4dC9wYWdlcy9wL1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZVJvdXRlcn0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuaW1wb3J0IE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJ1xuaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL015TGF5b3V0Jztcbi8vIGltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuXG4vLyBjb25zdCBQb3N0ID0gcHJvcHMgPT4gKFxuLy8gICAgIDxMYXlvdXQ+XG4vLyAgICAgICAgIDxoMT57cHJvcHMuc2hvdy5uYW1lfTwvaDE+XG4vLyAgICAgICAgIDxwPntwcm9wcy5zaG93LnN1bW1hcnkucmVwbGFjZSgvPFsvXT9bcGJdPi9nLCAnJyl9PC9wPlxuLy8gICAgICAgICA8aW1nIHNyYz17cHJvcHMuc2hvdy5pbWFnZS5tZWRpdW19Lz5cbi8vICAgICA8L0xheW91dD5cbi8vICk7XG5cbi8vIFBvc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oY29udGV4dCkge1xuLy8gICAgIGNvbnN0IHtpZH0gPSBjb250ZXh0LnF1ZXJ5O1xuLy8gICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Nob3dzLyR7aWR9YCk7XG4vLyAgICAgY29uc3Qgc2hvdyA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbi8vICAgICBjb25zb2xlLmxvZyhgRmV0Y2hlZCBzaG93OiAke3Nob3cubmFtZX1gKTtcblxuLy8gICAgIHJldHVybiB7c2hvd307XG4vLyB9XG5cbi8vIGV4cG9ydCBkZWZhdWx0IFBvc3Q7XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcbiAgICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgICByZXR1cm4gKFxuICAgICAgICA8TGF5b3V0PlxuICAgICAgICAgICAgPGgxPntyb3V0ZXIucXVlcnkuaWR9PC9oMT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFya2Rvd25cIj5cbiAgICAgICAgICAgICAgICA8TWFya2Rvd25cbiAgICAgICAgICAgICAgICAgICAgc291cmNlPXtgXG5UaGlzIGlzIG91ciBibG9nIHBvc3QuXG5ZZXMuIFdlIGNhbiBoYXZlIGEgW2xpbmtdKC9saW5rKS5cbkFuZCB3ZSBjYW4gaGF2ZSBhIHRpdGxlIGFzIHN3bGwuXG5cbiMjIyBUaGlzIGlzIGEgdGl0bGVcblxuQW5kIGhlcmUncyB0aGUgY29udGVudC5cbiAgICAgICAgICAgICAgICAgICAgYH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICAgICAgICAgIC5tYXJrZG93biB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9MYXlvdXQ+XG4gICAgKVxufSJdfQ== */\\n/*@ sourceURL=/Users/suhyeong/Desktop/SuhyeongCho/Github/hello-next/pages/p/[id].js */\"));\n});","map":{"version":3,"sources":["/Users/suhyeong/Desktop/SuhyeongCho/Github/hello-next/pages/p/[id].js"],"names":["useRouter","Markdown","Layout","router","query","id"],"mappings":";;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,gBAAe,MAAM;AACjB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADJ,EAEI;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACI,IAAA,MAAM,EAAG;;;;;;;;qBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AAAA;AAAA;AAAA,ivEADJ;AAuBH,CAzBD","sourcesContent":["import {useRouter} from 'next/router';\nimport Markdown from 'react-markdown'\nimport Layout from '../../components/MyLayout';\n// import fetch from 'isomorphic-unfetch';\n\n// const Post = props => (\n//     <Layout>\n//         <h1>{props.show.name}</h1>\n//         <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//         <img src={props.show.image.medium}/>\n//     </Layout>\n// );\n\n// Post.getInitialProps = async function(context) {\n//     const {id} = context.query;\n//     const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//     const show = await res.json();\n\n//     console.log(`Fetched show: ${show.name}`);\n\n//     return {show};\n// }\n\n// export default Post;\n\nexport default () => {\n    const router = useRouter();\n    return (\n        <Layout>\n            <h1>{router.query.id}</h1>\n            <div className=\"markdown\">\n                <Markdown\n                    source={`\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as swll.\n\n### This is a title\n\nAnd here's the content.\n                    `}\n                />\n            </div>\n            <style jsx global>{`\n                .markdown {\n                    font-family: 'Arial';\n                }\n            `}</style>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}