{"version":3,"file":"static/webpack/static/development/pages/p/[id].js.57b96ea50a7628875ff9.hot-update.js","sources":["webpack:///./pages/p/.js"],"sourcesContent":["import {useRouter} from 'next/router';\nimport Markdown from 'react-markdown'\nimport Layout from '../../components/MyLayout';\n// import fetch from 'isomorphic-unfetch';\n\n// const Post = props => (\n//     <Layout>\n//         <h1>{props.show.name}</h1>\n//         <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//         <img src={props.show.image.medium}/>\n//     </Layout>\n// );\n\n// Post.getInitialProps = async function(context) {\n//     const {id} = context.query;\n//     const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//     const show = await res.json();\n\n//     console.log(`Fetched show: ${show.name}`);\n\n//     return {show};\n// }\n\n// export default Post;\n\nexport default () => {\n    const router = useRouter();\n    return (\n        <Layout>\n            <h1>{router.query.id}</h1>\n            <div className=\"markdown\">\n                <Markdown\n                    source={`\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as swll.\n\n### This is a title\n\nAnd here's the content.\n                    `}\n                />\n            </div>\n            <style jsx global>{`\n                .markdown {\n                    font-family: 'Arial';\n                }\n\n                .markdown a {\n                    text-decoration: none;\n                    color: blue;\n                }\n\n                .markdown a:hover {\n                    opacity: 0.6;\n                }\n\n                .markdown h3 {\n                    margin: 0;\n                    padding: 0;\n                    text-transform: uppercase;\n                }\n            `}</style>\n        </Layout>\n    )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAqCA;;;;A","sourceRoot":""}